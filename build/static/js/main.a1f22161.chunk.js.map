{"version":3,"sources":["router/index.tsx","store/reducers/category.ts","store/reducers/index.ts","store/epics/categorys.ts","store/epics/index.ts","store/index.ts","App.tsx","serviceWorker.ts","index.tsx","customStorage.tsx","store/actions/index.ts","api/fetch_until.ts","api/index.ts","utils/categoryManage.ts","store/types.ts"],"names":["CardEditor","loadable","Promise","all","__webpack_require__","e","then","bind","routes","path","component","router","react_default","a","createElement","react_router_dom","react_router","render","_ref","location","TransitionGroup","className","CSSTransition","key","pathname","classNames","timeout","appear","onExit","console","log","map","route","i","exact","initState","index","categorys","_newCategorys","state","arguments","length","undefined","actions","type","CATE_INIT","payload","CATE_ADD_ARR","concat","customStorage","set","CATE_ADD","_index","Object","toConsumableArray","category","CATE_ADD_CARD","val","ulid","objectSpread","cards","card","CATE_ACTIVE","combineReducers","epics_categorys","action$","pipe","ofType","CATE_GET_LOCAL","switchMap","from","categoryManage","getListFromLocal","epicMiddleware","createEpicMiddleware","epics","combineEpics","apply","rootMiddleware","store","createStore","reducers","compose","applyMiddleware","run","App","es","src_router","Component","Boolean","window","hostname","match","toast","configure","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","toastClassName","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","CustomStorage","name","defaultValue","_Users_ziyue_workspace_card_study_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","localForage","getItem","result","data","setItem","_context2","t0","__webpack_exports__","d","getLocalCategorys","initCategorys","addCategory","activeCategory","typesafe_actions__WEBPACK_IMPORTED_MODULE_0__","_types__WEBPACK_IMPORTED_MODULE_1__","action","api","ky","create","prefixUrl","process","hooks","beforeRequest","asyncToGenerator","regenerator_default","mark","_callee","options","token","wrap","_context","prev","next","sent","headers","stop","_x","afterResponse","_ref2","_callee2","response","ok","status","json","code","Response","abrupt","error","onClick","href","_x2","retry","createCard","Ajax","post","findCard","get","searchParams","findCards","config","syncCategory","getCategorys","login","signin","categorysLocal","_Users_ziyue_workspace_card_study_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","findIndex","splice","_callee3","currCategory","_context3","find","replaceCategoryByUlid","_callee4","newCategory","_categorys","_categoryIndex","_context4","_callee5","serverPromise","serverData","serverCategory","_context5","Api","_callee6","_context6","push","removeLocalByUlid","removeCardsByUlid","syncCardsByUlid","addCardByUlid"],"mappings":"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","file":"static/js/main.a1f22161.chunk.js","sourcesContent":["import React, { ReactNode, FC } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport loadable from '@loadable/component';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport 'styles/route.css';\n// import Login from 'pages/Login';\n\ninterface Routes {\n  path: string;\n  component?: FC | any;\n}\nconst CardEditor = loadable(() => import('../pages/CardEditor'));\nconst HomeConnect = loadable(() => import('../pages/HomeConnect'));\nconst SearchList = loadable(() => import('../pages/SearchList'));\nconst routes: Routes[] = [\n  {\n    path: '/',\n    component: HomeConnect,\n  },\n  {\n    path: '/editor',\n    component: CardEditor,\n  },\n  {\n    path: '/list',\n    component: SearchList,\n  },\n];\nconst router = () => {\n  return (\n    <Router>\n      <Route\n        render={({ location }): ReactNode => (\n          <TransitionGroup className='container'>\n            <CSSTransition\n              key={location.pathname}\n              classNames='fade'\n              timeout={300}\n              appear={true}\n              onExit={() => console.log(123)}>\n              <Switch location={location}>\n                {routes.map((route: Routes, i: number) => (\n                  <Route\n                    exact\n                    path={route.path}\n                    key={i}\n                    component={route.component}\n                  />\n                ))}\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n        )}\n      />\n    </Router>\n  );\n};\nexport default router;\n","import {\n  CateState,\n  Action,\n  CATE_ADD_ARR,\n  CATE_ADD,\n  CATE_INIT,\n  CATE_ACTIVE,\n  CATE_ADD_CARD,\n} from '../types';\nimport customStorage from 'customStorage';\nimport { CategorysData } from 'types';\nconst initState: CateState = {\n  index: 0,\n  categorys: [],\n};\n\nconst categorys = (state = initState, actions: Action): CateState => {\n  const { categorys, index } = state;\n  let _newCategorys: CategorysData;\n  switch (actions.type) {\n    case CATE_INIT:\n      return {\n        index,\n        categorys: actions.payload.categorys,\n      };\n    case CATE_ADD_ARR:\n      _newCategorys = categorys.concat(actions.payload.categorys);\n      customStorage.categorys.set(_newCategorys);\n      return {\n        index,\n        categorys: _newCategorys,\n      };\n    case CATE_ADD:\n      _newCategorys = [...categorys, actions.payload.category];\n      const _index = _newCategorys.length - 1;\n      customStorage.categorys.set(_newCategorys);\n      return {\n        index: _index,\n        categorys: _newCategorys,\n      };\n    case CATE_ADD_CARD:\n      _newCategorys = categorys.map(val =>\n        val.ulid === actions.payload.ulid\n          ? { ...val, cards: [...val.cards, actions.payload.card] }\n          : val\n      );\n      return {\n        index,\n        categorys: _newCategorys,\n      };\n    case CATE_ACTIVE:\n      return {\n        index: actions.payload.index,\n        categorys,\n      };\n    default:\n      return state;\n  }\n};\nexport default categorys;\n","import { combineReducers } from 'redux';\nimport category from './category';\n\nexport default combineReducers({ category });\n","import { from } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\nimport { ofType } from 'redux-observable';\nimport { Epic } from 'redux-observable';\n\nimport { CATE_GET_LOCAL } from '../types';\n\nimport * as actions from 'store/actions';\nimport categoryManage from 'utils/categoryManage';\nimport { RootState, Action } from '../types';\n\nconst initCategorysEpic: Epic<Action, Action, RootState> = action$ => {\n  return action$.pipe(\n    ofType(CATE_GET_LOCAL),\n    switchMap(() =>\n      from(categoryManage.getListFromLocal()).pipe(map(actions.initCategorys))\n    )\n  );\n};\nexport default [initCategorysEpic];\n","import { createEpicMiddleware, combineEpics } from 'redux-observable';\nimport categorys from './categorys';\nimport { Action, RootState } from '../types';\n\nconst epicMiddleware = createEpicMiddleware<Action, Action, RootState>();\nexport const epics = combineEpics(...categorys);\n\nexport default epicMiddleware;\n","import { createStore, applyMiddleware, compose } from 'redux';\n\nimport reducers from 'store/reducers';\nimport epicMiddleware, { epics } from 'store/epics';\n\nconst rootMiddleware = [epicMiddleware];\nconst store = createStore(\n  reducers,\n  {},\n  compose(applyMiddleware(...rootMiddleware))\n);\nconsole.log(store);\nepicMiddleware.run(epics);\nexport default store;\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\n\nimport Router from 'router';\nimport 'styles/reset.css';\nimport 'styles/theme.css';\nimport 'styles/layout.css';\n// import { hot } from 'react-hot-loader/root';\nimport store from 'store';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <main className='theme__black app__container'>\n          <div className='router__container'>\n            <Router />\n          </div>\n        </main>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './styles/toast.css';\n\ntoast.configure({\n  position: 'top-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  toastClassName: 'toast_container',\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import localForage from 'localforage';\nclass CustomStorage {\n  name: string;\n  defaultValue: any;\n  constructor(name: string, defaultValue: any) {\n    this.name = name;\n    this.defaultValue = defaultValue;\n  }\n  async get() {\n    let result: any;\n    try {\n      result = await localForage.getItem(this.name);\n      if (result === null || result === undefined) {\n        result = this.defaultValue;\n      }\n    } catch (error) {\n      result = this.defaultValue;\n    }\n    return result;\n  }\n  async set(data: any) {\n    try {\n      if (data === undefined) return;\n      await localForage.setItem(this.name, data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport default {\n  categorys: new CustomStorage('categorys', []),\n};\n","import { action } from 'typesafe-actions';\nimport {\n  CATE_ADD,\n  CATE_ADD_ARR,\n  CATE_GET_LOCAL,\n  CATE_INIT,\n  CATE_ACTIVE,\n  CATE_ADD_CARD,\n} from '../types';\nimport { CategoryData, CategorysData, CardData } from 'types';\nexport const getLocalCategorys = () => action(CATE_GET_LOCAL);\nexport const initCategorys = (categorys: CategorysData) =>\n  action(CATE_INIT, {\n    categorys,\n  });\nexport const addCategorys = (categorys: CategorysData) =>\n  action(CATE_ADD_ARR, {\n    categorys,\n  });\nexport const addCategory = (category: CategoryData) =>\n  action(CATE_ADD, {\n    category,\n  });\nexport const activeCategory = (index: number) =>\n  action(CATE_ACTIVE, {\n    index,\n  });\nexport const addCardForCate = (ulid: string, card: CardData) =>\n  action(CATE_ADD_CARD, {\n    ulid,\n    card,\n  });\n","import ky from 'ky';\nimport localForage from 'localforage';\nimport { toast } from 'react-toastify';\n\nconst api = ky.create({\n  prefixUrl: process.env.REACT_APP_HOST,\n  hooks: {\n    beforeRequest: [\n      async options => {\n        const token = await localForage.getItem('token');\n        const headers: any = options.headers;\n        headers.set('Authorization', `Bearer ${token}`);\n        console.log(options);\n      },\n    ],\n    afterResponse: [\n      async response => {\n        console.log(response);\n        const { ok, status } = response;\n        if (ok) {\n          if (status === 200) {\n            const data = await response.json();\n            if (data.code === '000000') {\n              console.log(data);\n              console.log(data instanceof Response);\n              return data;\n            } else {\n              throw data;\n            }\n          } else {\n            toast.error('系统异常');\n            // throw new Error('Fetch error:');\n          }\n        } else {\n          if (status === 401) {\n            toast('登录失效，重新登录！', {\n              onClick: () => {\n                window.location.href = '';\n              },\n            });\n          }\n          toast.error('系统异常');\n          // throw new Error(`Fetch error: ${response.statusText}`);\n        }\n      },\n    ],\n  },\n  timeout: 3000,\n  retry: 1,\n});\n\nexport default api;\n","import { CardData } from 'types';\nimport Ajax from './fetch_until';\nimport { CategoryData } from 'types';\n\ninterface AuthParams {\n  username: string;\n  password: string;\n}\ninterface CardQueryId {\n  id: string;\n}\ninterface CardQueryTitle {\n  title: string;\n}\ninterface CardsQuery {\n  catetory?: string;\n}\n\nexport default {\n  createCard(data: CardData) {\n    return Ajax.post('card', {\n      json: data,\n    });\n  },\n  findCard(data: CardQueryId | CardQueryTitle) {\n    return Ajax.get('card', {\n      searchParams: {\n        ...data,\n      },\n    });\n  },\n  findCards(data?: CardsQuery) {\n    let config = {};\n    if (data) {\n      config = {\n        searchParams: {\n          ...data,\n        },\n      };\n    }\n    return Ajax.get('cards', config);\n  },\n  syncCategory(data: CategoryData) {\n    return Ajax.post('category/sync', {\n      json: data,\n    });\n  },\n  getCategorys() {\n    return Ajax.get('categorys');\n  },\n  login(data: AuthParams) {\n    return Ajax.post('auth/login', {\n      json: data,\n    });\n  },\n  signin(data: AuthParams) {\n    return Ajax.post('auth/signin', {\n      json: data,\n    });\n  },\n};\n","import customStorage from 'customStorage';\nimport { CardData, CategoryData } from '../types';\nimport Api from 'api';\n\nasync function getListFromLocal() {\n  const categorysLocal: CategoryData[] = await customStorage.categorys.get();\n  return categorysLocal || [];\n}\n\nasync function removeLocalByUlid(ulid: string) {\n  const categorysLocal: CategoryData[] = await getListFromLocal();\n  const _index = categorysLocal.findIndex(val => val.ulid === ulid);\n  if (_index > -1) {\n    categorysLocal.splice(_index, 1);\n    await customStorage.categorys.set(categorysLocal);\n    return categorysLocal;\n  }\n  return null;\n}\nasync function removeCardsByUlid(ulid: string) {\n  const categorysLocal: CategoryData[] = await getListFromLocal();\n  const currCategory = categorysLocal.find(val => val.ulid === ulid);\n  if (currCategory) {\n    currCategory.cards = [];\n    await customStorage.categorys.set(categorysLocal);\n  }\n}\nasync function replaceCategoryByUlid(\n  ulid: string,\n  newCategory: CategoryData,\n  categorys?: CategoryData[]\n) {\n  let _categorys = categorys;\n  if (!categorys) {\n    _categorys = await getListFromLocal();\n  }\n  if (_categorys) {\n    const _categoryIndex = _categorys.findIndex(val => val.ulid === ulid);\n    if (_categoryIndex > -1) {\n      _categorys[_categoryIndex] = newCategory;\n      await customStorage.categorys.set(_categorys);\n    }\n  }\n}\n/**\n * 和服务器同步卡片，只同步本人创建的分类\n *\n * @param {string} ulid 分类uLid\n */\nasync function syncCardsByUlid(ulid: string) {\n  const categorysLocal: CategoryData[] = await getListFromLocal();\n  const currCategory = categorysLocal.find(val => val.ulid === ulid);\n  if (currCategory) {\n    const serverPromise = await Api.syncCategory(currCategory);\n    const serverData = await serverPromise.json();\n    const serverCategory = serverData.data;\n    if (serverCategory) {\n      await replaceCategoryByUlid(ulid, serverCategory, categorysLocal);\n    }\n  }\n}\n/**\n * 通过ulid添加卡片到本地\n *\n * @param {string} ulid\n * @param {CardData} card\n * @returns\n */\nasync function addCardByUlid(ulid: string, card: CardData) {\n  const categorysLocal: CategoryData[] = await getListFromLocal();\n  const currCategory = categorysLocal.find(val => val.ulid === ulid);\n  if (currCategory) {\n    currCategory.cards.push(card);\n    await customStorage.categorys.set(categorysLocal);\n  } else {\n    return null;\n  }\n}\nexport default {\n  getListFromLocal,\n  removeLocalByUlid,\n  removeCardsByUlid,\n  syncCardsByUlid,\n  addCardByUlid,\n};\n","import { CategorysData } from 'types';\nimport { ActionType } from 'typesafe-actions';\nimport * as actions from 'store/actions';\n\nexport const CATE_ADD = 'CATE_ADD';\nexport const CATE_ADD_ARR = 'CATE_ADD_ARR';\nexport const CATE_GET_LOCAL = 'CATE_GET_LOCAL';\nexport const CATE_INIT = 'CATE_INIT';\nexport const CATE_ACTIVE = 'CATE_ACTIVE';\nexport const CATE_ADD_CARD = 'CATE_ADD_CARD';\n\nexport type Action = ActionType<typeof actions>;\nexport interface RootState {\n  category: CateState;\n}\nexport interface CateState {\n  index: number;\n  categorys: CategorysData;\n}\ninterface InitCategoryAction {\n  type: typeof CATE_INIT;\n  categorys: CategorysData;\n}\ninterface AddCategoryAction {\n  type: typeof CATE_ADD;\n  categorys: CategorysData;\n}\ninterface ActiveCategoryAction {\n  type: typeof CATE_ACTIVE;\n  index: number;\n}\n\nexport type CategoryAction =\n  | InitCategoryAction\n  | AddCategoryAction\n  | ActiveCategoryAction;\n"],"sourceRoot":""}