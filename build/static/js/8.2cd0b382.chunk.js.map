{"version":3,"sources":["containers/CategorysListConnect.tsx","components/home/index.tsx","pages/Home.tsx","pages/HomeConnect.tsx"],"names":["connect","state","categorys","category","activeIndex","index","dispatch","bindActionCreators","getLocalCategorys","activeCategory","i","_ref","categoryDel","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","stop","_x","apply","this","arguments","categorySync","_ref3","_callee2","_context2","_x2","useEffect","console","log","react_default","createElement","components","onSelect","onDel","onSync","selectIndex","PageContainer","styled","main","_templateObject","GridBox","div","_templateObject2","prop","show","GridA","_templateObject3","GridB","_templateObject4","GridC","_templateObject5","GridD","_templateObject6","GridDRight","_templateObject7","AvatarBox","_templateObject8","FormBox","_templateObject9","Home","props","history","addCategory","_useState","useState","_useState2","slicedToArray","cards","setCards","_useState3","_useState4","cardContentData","setCardContent","_useState5","_useState6","showContent","setShowContent","_useState7","_useState8","categoryShow","setCategoryShow","_useState9","_useState10","loginShow","setLoginShow","_useState11","_useState12","loginFormType","setLoginFormType","_useState13","_useState14","loginStatus","setLoginStatus","saveCategory","setCurrCategoryCards","hasLogin","_callee3","_context3","localForage","getItem","sent","CategorysListConnect","onHide","onSuccess","type","name","onClick","push","onClickLogin","onClickSignIn","assign","close","itemClick","item","onSave","currCategory","pathname","ulid","toast","error"],"mappings":"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","file":"static/js/8.2cd0b382.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { Dispatch, bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { CategoryList } from 'components';\nimport { CategorysData } from 'types';\nimport { getLocalCategorys, activeCategory } from 'store/actions';\nimport { RootState, Action } from 'store/types';\n\ninterface CategorysProps {\n  activeIndex: number;\n  categorys: CategorysData;\n  getLocalCategorys: Function;\n  activeCategory: Function;\n}\nconst CategoryListContainer: React.SFC<CategorysProps> = ({\n  activeIndex,\n  categorys,\n  getLocalCategorys,\n  activeCategory,\n}: CategorysProps) => {\n  const categorySelect = (index: number) => {\n    activeCategory(index);\n  };\n  const categoryDel = async (index: number) => {\n    // const currCategory = categorys[index];\n    // if (currCategory) {\n    //   const _categorys = await categoryManage.removeLocalByUlid(\n    //     currCategory.ulid\n    //   );\n    //   if (_categorys) {\n    //     setCategorys(_categorys);\n    //     setSelectIndex(index - 1);\n    //   }\n    // }\n  };\n  const categorySync = async (index: number) => {\n    // const currCategory = categorys[index];\n    // categoryManage.syncCardsByUlid(currCategory.ulid);\n  };\n  useEffect(() => {\n    getLocalCategorys();\n    console.log(categorys);\n  }, []);\n  return (\n    <CategoryList\n      onSelect={categorySelect}\n      onDel={categoryDel}\n      onSync={categorySync}\n      selectIndex={activeIndex}\n      categorys={categorys}\n    />\n  );\n};\nconst mapStateToProps = (state: RootState) => ({\n  categorys: state.category.categorys,\n  activeIndex: state.category.index,\n});\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) =>\n  bindActionCreators(\n    {\n      getLocalCategorys: () => getLocalCategorys(),\n      activeCategory: (i: number) => activeCategory(i),\n    },\n    dispatch\n  );\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CategoryListContainer);\n","import styled from 'styled-components';\n\nexport const PageContainer = styled.main`\n  width: 100vw;\n  height: 100vh;\n  background: #000;\n  position: relative;\n`;\nexport const GridBox = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  overflow: hidden;\n  grid-template-columns: 200px 1fr;\n  grid-template-rows: ${(prop: any) =>\n    prop.show ? '120px 1fr 120px' : '1fr 300px 1fr'};\n  grid-template-areas: 'a b' 'a c' 'a d';\n  transition: all 1s;\n  @media (max-width: 600px) {\n    grid-template-columns: 0 1fr;\n    grid-template-rows: 120px 1fr 120px;\n  }\n`;\nexport const GridA = styled.div`\n  grid-area: a;\n  @media (max-width: 600px) {\n    position: fixed;\n    top: 0;\n    left: 0;\n    transform: translateX(-100%);\n  }\n`;\nexport const GridB = styled.div`\n  grid-area: b;\n  border-left: 2px solid var(--color-3);\n  border-bottom: 2px solid var(--color-3);\n  box-shadow: 0 0 10px 0 var(--color-3) inset;\n  border-bottom-left-radius: 10px;\n  overflow: hidden;\n  display: flex;\n  transition: all 1s;\n`;\nexport const GridC = styled.div`\n  width: 100%;\n  min-height: 100%;\n  min-width: 100%;\n  grid-area: c;\n`;\nexport const GridD = styled.div`\n  grid-area: d;\n  border-left: 2px solid var(--color-3);\n  border-top: 2px solid var(--color-3);\n  box-shadow: 0 0 10px 0 var(--color-3) inset;\n  border-top-left-radius: 10px;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  transition: all 1s;\n`;\nexport const GridDRight = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n`;\nexport const AvatarBox = styled.div`\n  margin: 0 100px;\n`;\n\nexport const FormBox = styled.div`\n  border-top-left-radius: 10px;\n  height: 100%;\n  width: ${(prop: any) => (prop.show ? '300px' : '0')};\n  overflow: hidden;\n  transform: ${(prop: any) =>\n    prop.show ? 'translateX(0)' : 'translateX(-120%)'};\n  transition: transform 0.5s;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport localForage from 'localforage';\nimport {\n  CardContent,\n  CustomButton,\n  CardsHorz,\n  CategoryForm,\n  LoginForm,\n  Avatar,\n} from 'components';\nimport { CategorysListConnect } from 'containers';\n\nimport { ItemData, CategoryData, CategorysData } from 'types';\n\nimport { toast } from 'react-toastify';\nimport {\n  PageContainer,\n  GridBox,\n  GridA,\n  GridB,\n  GridC,\n  GridD,\n  GridDRight,\n  AvatarBox,\n  FormBox,\n} from 'components/home';\ninterface HomeProps extends RouteComponentProps {\n  addCategory: Function;\n  activeIndex: number;\n  categorys: CategorysData;\n}\nconst Home: React.SFC<HomeProps> = (props: HomeProps) => {\n  const { history, addCategory, categorys, activeIndex } = props;\n  const [cards, setCards] = useState();\n  const [cardContentData, setCardContent] = useState();\n  const [showContent, setShowContent] = useState(false);\n  const [categoryShow, setCategoryShow] = useState(false);\n  const [loginShow, setLoginShow] = useState(false);\n  const [loginFormType, setLoginFormType] = useState('login');\n  const [loginStatus, setLoginStatus] = useState(false);\n  const itemClick = (item: ItemData) => {\n    console.log(item);\n    setShowContent(true);\n    setCardContent(item);\n  };\n  const createCategory = () => {\n    console.log('新建分类');\n    setShowContent(false);\n    setCategoryShow(true);\n  };\n  const createCard = () => {\n    const currCategory = categorys[activeIndex];\n    if (currCategory) {\n      history.push({\n        pathname: 'editor',\n        state: { category: currCategory.ulid, type: currCategory.type },\n      });\n    } else {\n      toast.error('请先新建分类');\n    }\n  };\n  const saveCategory = async (category: CategoryData) => {\n    addCategory(category);\n  };\n  const hideCategoryForm = () => {\n    setCategoryShow(false);\n  };\n  const setCurrCategoryCards = async (category: CategoryData) => {\n    if (category && category.cards) {\n      setCards(category.cards);\n    }\n  };\n  const loginOrSignInSuccess = () => {\n    setLoginStatus(true);\n  };\n  const showLogin = () => {\n    setLoginFormType('login');\n    setLoginShow(true);\n  };\n  const showSignin = () => {\n    setLoginFormType('signin');\n    setLoginShow(true);\n  };\n  const hasLogin = async () => {\n    const token = await localForage.getItem('token');\n    if (token) {\n      setLoginStatus(true);\n    }\n  };\n  const hideLoginForm = () => {\n    setLoginShow(false);\n  };\n  const toSearchList = () => {\n    history.push('/list');\n  };\n  useEffect(() => {\n    hasLogin();\n  }, []);\n  useEffect(() => {\n    setCurrCategoryCards(categorys[activeIndex]);\n  }, [activeIndex, categorys]);\n  return (\n    <PageContainer>\n      <GridBox show={showContent}>\n        <GridA>\n          <CategorysListConnect />\n        </GridA>\n        <GridB>\n          <FormBox show={loginShow}>\n            <LoginForm\n              onHide={hideLoginForm}\n              onSuccess={loginOrSignInSuccess}\n              type={loginFormType}\n            />\n          </FormBox>\n          <GridDRight>\n            {!loginShow && <CustomButton name='搜索' onClick={toSearchList} />}\n            <AvatarBox>\n              <Avatar\n                onClickLogin={showLogin}\n                onClickSignIn={showSignin}\n                loginStatus={loginStatus}\n              />\n            </AvatarBox>\n          </GridDRight>\n        </GridB>\n        <GridC>\n          {showContent ? (\n            <CardContent\n              {...cardContentData}\n              close={() => setShowContent(false)}\n            />\n          ) : (\n            <CardsHorz cards={cards} itemClick={itemClick} />\n          )}\n        </GridC>\n        <GridD>\n          <FormBox show={categoryShow}>\n            <CategoryForm onSave={saveCategory} onHide={hideCategoryForm} />\n          </FormBox>\n          <GridDRight>\n            <CustomButton name='新建分类' onClick={createCategory} />\n            <CustomButton name='新建卡片' onClick={createCard} />\n          </GridDRight>\n        </GridD>\n      </GridBox>\n    </PageContainer>\n  );\n};\nexport default Home;\n","import { Dispatch, bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { CategoryData } from 'types';\nimport { addCategory } from 'store/actions';\nimport { RootState, Action } from 'store/types';\nimport Home from './Home';\n\nconst mapStateToProps = (state: RootState) => ({\n  activeIndex: state.category.index,\n  categorys: state.category.categorys,\n});\nconst mapActionsToProps = (dispatch: Dispatch<Action>) =>\n  bindActionCreators(\n    {\n      addCategory: (category: CategoryData) => addCategory(category),\n    },\n    dispatch\n  );\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(Home);\n"],"sourceRoot":""}