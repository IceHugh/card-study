{"version":3,"sources":["styles/pages/Posts.module.css","pages/Posts.tsx"],"names":["module","exports","article_focus","Main","styled","main","_templateObject","Nav","nav","_templateObject2","PostBox","div","_templateObject3","SimplePost","article","_templateObject4","Title","header","_templateObject5","Date","_templateObject6","prop","readStatus","Section","section","_templateObject7","MainPost","_templateObject8","IconDel","span","_templateObject9","NewBox","_templateObject10","Posts","props","history","_useState","useState","_useState2","Object","_Users_ziyue_workspace_blog_blog_admin_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","read","setRead","_useState3","_useState4","posts","setPosts","_useState5","_useState6","currIndex","setCurrIndex","_useState7","title","id","pub_time","_useState8","currPost","setCurrPost","useEffect","Api","getPosts","then","res","json","postsRes","_posts","data","blurHander","dateFormat","date","substr","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","map","val","i","key","tabIndex","onClick","setTimeout","focusCard","onBlur","className","styles","toast","push","pathname","deletePost","console","log","error","splice","catch","err","state","search","concat"],"mappings":"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","file":"static/js/5.6d58d6f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"article_focus\":\"Posts_article_focus__2wBIi\"};","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport styles from 'styles/pages/Posts.module.css';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Api from 'api';\n\nconst Main = styled.main`\n  width: 100%;\n  height: 100%;\n  background: #000;\n`\nconst Nav = styled.nav`\n  overflow-x: scroll;\n  display: flex;\n  padding: 10px;\n  box-shadow: 0px 0 20px #000 inset;\n`\nconst PostBox = styled.div`\n  height: 300px;\n  min-width: 200px;\n  width: 200px;\n  &:focus {\n    outline: none;\n  }\n  &:not(:first-of-type) {\n    margin-left: -60px;\n  }\n  /* &:focus-within {\n    article {\n      transform: scale(0);\n    }\n  } */\n  &:hover {\n    &~ div:not(:focus-within) {\n      transform: translateX(70px);\n    }\n  }\n`\nconst SimplePost = styled.article`\n  transition: all .5s;\n  padding: 10px;\n  height: 300px;\n  min-width: 200px;\n  width: 200px;\n  box-shadow: -2px 0 18px #000;\n  cursor: pointer;\n  pointer-events: auto;\n  border-radius: var(--border-radius-main);\n  touch-action: manipulation;\n  background: var(--color-1);\n  overflow: hidden;\n  \n`\nconst Title = styled.header`\n  font-size: 40px;\n  color: var(--color-2);\n  margin-bottom: 10px;\n  word-break: break-all;\n  cursor: pointer;\n  margin-bottom: 30px;\n`\nconst Date = styled.div`\n  font-size: 18px;\n  writing-mode: ${(prop: any) => prop.readStatus ? 'none': 'vertical-lr'};\n  color: var(--color-2);\n`\nconst Section = styled.section`\n  width: 100%;\n  height: calc(100% - 300px);\n  position: relative;\n`\nconst MainPost = styled.article`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transition: all .5s;\n  transform: ${(prop: any) => prop.readStatus ? 'translate(-50%, -50%) scale(1)': 'translate(-50%, -50%) scale(0)'};\n  width: 60%;\n  min-width: 600px;\n  height: 40%;\n  box-shadow: -2px 0 18px #000;\n  border-radius: var(--border-radius-main);\n  touch-action: manipulation;\n  background: var(--color-1);\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 2;\n`\nconst IconDel = styled.span`\n  border-radius: 50%;\n  color: #000;\n  position: absolute;\n  top: 15px;\n  right: 0;\n  font-size: 30px;\n  transform: translate(-50%, -50%) rotate(45deg);\n  cursor: pointer;\n`\nconst NewBox = styled.div`\n  transition: top 0.5s;\n  position: absolute;\n  top: ${(prop: any) => prop.readStatus ? '82%' : '50%'};\n  left: 50%;\n  z-index: 1;\n  transform: translate(-50%, -50%);\n  width: 80px;\n  height: 80px;\n  line-height: 80px;\n  text-align: center;\n  font-size: 30px;\n  border-radius: 50%;\n  background: var(--color-1);\n  color: var(--color-3);\n  box-shadow: 0 0 60px var(--color-2);\n  text-shadow: 0 0 60px var(--color-2);\n  cursor: pointer;\n`\ninterface PostData {\n  category?: string[];\n  id: string;\n  pub_time: string;\n  tags?: string[];\n  title: string\n} \nconst Posts = (props: RouteComponentProps) => {\n  const { history } = props;\n  const initPosts: PostData[] = [];\n  const [read, setRead] = useState(false);\n  const [posts, setPosts] = useState(initPosts);\n  const [currIndex, setCurrIndex] = useState(-1);\n  const [currPost, setCurrPost] = useState({\n    title: '',\n    id: '',\n    pub_time: '',\n  });\n  useEffect(() => {\n    Api.getPosts().then(res => {\n      res.json().then( postsRes => {\n        const _posts: PostData[]  = postsRes.data;\n        setPosts(_posts);\n      })\n    });\n  }, []);\n  const blurHander = () => {\n    // setRead(false);\n  }\n  const focusCard = (i: number) => {\n    if (i === currIndex) return; \n    setRead(false);\n    setCurrIndex(i);\n    setCurrPost(posts[i]);\n    setTimeout(() => setRead(true), 600)\n  }\n  const editDetail = (id: string) => {\n    toast('upgrade an article');\n    history.push({ pathname: `/editor/`, state: { id }, search: `?id=${id}`});\n  }\n  const newPost = () => {\n    toast('create new article');\n    history.push({ pathname: `/editor/` });\n  }\n  const delPost = (id: string) => {\n    Api.deletePost({ id }).then(res => {\n      console.log(res);\n      toast.error('deleted success!');\n      setRead(false);\n      posts.splice(currIndex, 1);\n      setPosts(posts);\n      setCurrIndex(-1);\n      setCurrPost({\n        title: '',\n        id: '',\n        pub_time: '',\n      });\n    }).catch(err => {\n      toast.error('deleted error!');\n    });\n  }\n  const dateFormat = (date: string) => {\n    if (!date) return;\n    return date.substr(0, 11);\n  }\n  return (\n    <Main>\n      <Nav>\n        {\n          posts.map((val, i) => (\n            <PostBox key={i} tabIndex={i} onClick={() => focusCard(i)} onBlur={blurHander}>\n              <SimplePost className={i === currIndex ? styles.article_focus : ''}>\n                <Title>{val.title}</Title>\n                <Date>{dateFormat(val.pub_time)}</Date>\n              </SimplePost>\n            </PostBox>\n          ))\n        }\n      </Nav>\n      <Section>\n        <NewBox onClick={newPost} readStatus={read}>New</NewBox>\n        <MainPost readStatus={read}>\n          <IconDel onClick={() => delPost(currPost.id)}>+</IconDel>\n          <Title onClick={() => editDetail(currPost.id)}>{currPost.title}</Title>\n          <Date readStatus={true}>{dateFormat(currPost.pub_time)}</Date>\n        </MainPost>\n      </Section>\n    </Main>\n  );\n}\n\nexport default Posts;"],"sourceRoot":""}